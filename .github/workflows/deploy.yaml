name: Sausage Store Deploy

on:
  push:
    branches:
      - main

env:
  NEXUS_HELM_REPO: ${{ secrets.NEXUS_HELM_REPO }}
  NEXUS_HELM_REPO_USER: ${{ secrets.NEXUS_HELM_REPO_USER }}
  NEXUS_HELM_REPO_PASSWORD: ${{ secrets.NEXUS_HELM_REPO_PASSWORD }}
  SAUSAGE_STORE_NAMESPACE: r-devops-magistracy-project-2sem-565541190
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}

jobs:
  # Сборка и пуш образов в докерхаб:
  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        # Получение исходного кода из репозитория:
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        # Установка сборщика контейнеров Docker:
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        # Авторизация на Docker Hub:
        uses: docker/login-action@v2
        # При помощи with передаём в action параметры username и password:
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          # Хорошо ли держать логин и пароль прямо в коде workflow?
          # Нет, это нехорошо. Хранить пароль надо в Secrets.
      - name: Push Backend to DockerHub
        # Одновременный билд и пуш образа в Docker Hub:
        uses: docker/build-push-action@v4
        with:
          # Параметр context: ./backend/ указывает, что нужный Dockerfile
          # находится в ./backend/
          context: ./backend/
          # Параметр push: true указывает, что образ нужно не только собрать,
          # но и отправить на Docker Hub:
          push: true
          # В параметре tags задаётся название и тег для образа.
          # Для каждого пересобранного образа
          # устанавливаем тег latest, чтобы потом
          # на сервере и в docker-compose.yml не указывать версию образа:
          tags: alexanderx23/sausage-backend:latest
          build-args: |
            VERSION=${{ github.sha }}
      - name: Push Frontend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: alexanderx23/sausage-frontend:latest
      - name: Push Backend-report to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend-report/
          push: true
          tags: alexanderx23/sausage-backend-report:latest
  # Упаковываем helm-чарт и пушим его в Nexus
  add_helm_chart_to_nexus:
    name: Add Helm Chart To Nexus
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub

      #    steps:
      #      - name: Получить исходный код репозитория
      #        uses: actions/checkout@v3
      #      - name: Установка helm
      #        uses: helm/helm-action@v2.4.0
      #        with:
      #          version: v3.14.0
      #      - name: Упаковка Helm чарта
      #        run: |
      #          helm dependency update ./sausage-store-chart/
      #          helm package ./sausage-store-chart/ -d ./packaged/
      #      - name: Отправка упакованного чарта в Nexus
      #        env:
      #          NEXUS_USER: ${{ secrets.NEXUS_HELM_REPO_USER }}
      #          NEXUS_PASSWORD: ${{ secrets.NEXUS_HELM_REPO_PASSWORD }}
      #          NEXUS_URL: "https://nexus.example.com/repository/helm-private"
      #        run: |
      #          CHART_FILE=$(ls ./packaged/*.tgz)
      #          curl -u "$NEXUS_HELM_REPO_USER:$NEXUS_HELM_REPO_PASSWORD" \
      #            --upload-file "$CHART_FILE" \
      #            "https://nexus.cloud-services-engineer.education-services.ru/repository/alexandervasiliev23-sausage-store-helm/"



  # Деплоим приложения в кластер Kubernetes с помощью helm-чарт
  deploy_helm_chart_to_kubernetes:
    name: Deploy Helm Chart To Kubernetes
    runs-on: ubuntu-latest
    needs: add_helm_chart_to_nexus

    steps:
    #### Опишите необходимые шаги