apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
spec:
  serviceName: postgresql
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      initContainers:
        - name: cleanup-data-dir
          image: alpine:3.14
          command: [ "sh", "-c", "rm -rf /var/lib/postgresql/data/lost+found" ]
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data
          resources:
{{ toYaml .Values.postgresql.resources | indent 12 }}
      containers:
        - name: postgresql
          image: postgres:16-alpine
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgresql-conf
          resources:
{{ toYaml .Values.postgresql.resources | indent 12 }}
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgresql-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-conf
data:
  POSTGRES_PASSWORD: {{ .Values.postgresql.env.POSTGRES_PASSWORD }}
  POSTGRES_USER: {{ .Values.postgresql.env.POSTGRES_USER }}
  POSTGRES_DB: {{ .Values.postgresql.env.POSTGRES_DB }}
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  labels:
    app: postgresql
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgresql
  clusterIP: None